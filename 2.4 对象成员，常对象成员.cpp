/*对象成员：一个类的对象作为另一个类的数据成员（包含has-a）
is-a（继承）
1.如果一个类A的对象是另一个类B的数据成员，那么在创
建类B的对象时，类A的对象也会被自动创建。
    2.系统首先调用其对象成员（A类）的构造函数，初
    始化对象成员；
    3.– 然后才执行类B自己的构造函数，初始化类中的非
    对象成员。
    4.对于同一类中的多个对象成员，系统按照它们在类中
    的说明顺序调用相应的构造函数进行初始化。
*/


/*常量数据成员初始化
1.一般，构造函数用于对象的数据成员初始化
2.如果数据成员为常量成员（const）或者引用成员（&）不能使用构造函数
··应该使用初始化表
*/

//eg
class SS{
    public:
    SS(int i )
    {
        ten = 10;  //错误
        refi = i; //错误
    }
    protected:
    const int ten;  //const
    int &refi;  //&
}

//解决方案
class SS
{
    public:
    SS(int i)    //初始化表
    : ten(10), refi(i);
    {}
    protected:
    const int ten;
    int &refi;
}



/*常成员函数：const说明的成员函数
1.只读函数，可以读取数据成员的值，不能修改
2.不能调用类中其他非 常成员函数
*/

/* 常对象：
格式：1.const 类名 对象名
    2.类名 const 对象名
特点：
1.定义是应该初始化，之后整个生存期都不能改变
2.只能调用类中常成员函数    
 */
